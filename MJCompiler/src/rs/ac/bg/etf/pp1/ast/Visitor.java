// generated with ast extension for cup
// version 0.8
// 16/11/2020 0:27:20


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(OptionalActParsWithBrackets OptionalActParsWithBrackets);
    public void visit(VoidOrType VoidOrType);
    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(ClassVarDecls ClassVarDecls);
    public void visit(DesignatorStatementOptions DesignatorStatementOptions);
    public void visit(OptionalExprInBrackets OptionalExprInBrackets);
    public void visit(IfCondExpr IfCondExpr);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(OptionalArrayBrackets OptionalArrayBrackets);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(GlobalVarDecl GlobalVarDecl);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(OptionalExpr OptionalExpr);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(OptionalExtendedClassLBrace OptionalExtendedClassLBrace);
    public void visit(ConstValue ConstValue);
    public void visit(CaseList CaseList);
    public void visit(TermExpr TermExpr);
    public void visit(ConditionExpr ConditionExpr);
    public void visit(FullPrintStatement FullPrintStatement);
    public void visit(OptionalFormPars OptionalFormPars);
    public void visit(Expr Expr);
    public void visit(OptionalActPars OptionalActPars);
    public void visit(ActPars ActPars);
    public void visit(ClassOptionalVarDeclList ClassOptionalVarDeclList);
    public void visit(FormsPars FormsPars);
    public void visit(AssignStatementRecover AssignStatementRecover);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(OptionalElseStatement OptionalElseStatement);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(ConstDecls ConstDecls);
    public void visit(MethodDeclListWithBraces MethodDeclListWithBraces);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptionalVarDeclList OptionalVarDeclList);
    public void visit(OptionalMinus OptionalMinus);
    public void visit(GlobalVarDecls GlobalVarDecls);
    public void visit(ModMulop ModMulop);
    public void visit(DivMulop DivMulop);
    public void visit(MulMulop MulMulop);
    public void visit(SubAddop SubAddop);
    public void visit(AddAddop AddAddop);
    public void visit(LesserRelop LesserRelop);
    public void visit(LesserEqualsRelop LesserEqualsRelop);
    public void visit(GreaterRelop GreaterRelop);
    public void visit(GreaterEqualsRelop GreaterEqualsRelop);
    public void visit(NotEqualsRelop NotEqualsRelop);
    public void visit(EqualsRelop EqualsRelop);
    public void visit(Assignop Assignop);
    public void visit(Type Type);
    public void visit(NoArrayBrackets NoArrayBrackets);
    public void visit(ArrayBrackets ArrayBrackets);
    public void visit(NoExtendedClass NoExtendedClass);
    public void visit(ErrorExtendedClass ErrorExtendedClass);
    public void visit(ExtendedClass ExtendedClass);
    public void visit(BooleanConst BooleanConst);
    public void visit(CharConst CharConst);
    public void visit(NumberConst NumberConst);
    public void visit(SingleDecl SingleDecl);
    public void visit(NextVarDecl NextVarDecl);
    public void visit(VarDecls VarDecls);
    public void visit(NoVarDecls NoVarDecls);
    public void visit(FullVarDecl FullVarDecl);
    public void visit(NoMinus NoMinus);
    public void visit(Minus Minus);
    public void visit(SingleDesignator SingleDesignator);
    public void visit(InnerExprInBracketsDesignator InnerExprInBracketsDesignator);
    public void visit(InnerDotIdentDesignator InnerDotIdentDesignator);
    public void visit(SingleActPar SingleActPar);
    public void visit(NextActPar NextActPar);
    public void visit(NoActPars NoActPars);
    public void visit(FullActPars FullActPars);
    public void visit(NoActParsWithBrackets NoActParsWithBrackets);
    public void visit(FullActParsWihBrackets FullActParsWihBrackets);
    public void visit(NoExprInBrackets NoExprInBrackets);
    public void visit(FullExprInBrackets FullExprInBrackets);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewOperatorFactor NewOperatorFactor);
    public void visit(ConstFactor ConstFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(SingleTerm SingleTerm);
    public void visit(NextTerm NextTerm);
    public void visit(SingleTermExpr SingleTermExpr);
    public void visit(NextTermExpr NextTermExpr);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(FullCondFact FullCondFact);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(NextCondTerm NextCondTerm);
    public void visit(SingleCondition SingleCondition);
    public void visit(NextCondition NextCondition);
    public void visit(RegularExpr RegularExpr);
    public void visit(TernaryExpr TernaryExpr);
    public void visit(RegularConditionExpr RegularConditionExpr);
    public void visit(TernaryConditionExpr TernaryConditionExpr);
    public void visit(NoExpr NoExpr);
    public void visit(FullExpr FullExpr);
    public void visit(ParameterizedPrintStatement ParameterizedPrintStatement);
    public void visit(SimplePrintStatement SimplePrintStatement);
    public void visit(NoCase NoCase);
    public void visit(Case Case);
    public void visit(NoElseStatement NoElseStatement);
    public void visit(ElseStatement ElseStatement);
    public void visit(AssignExprError AssignExprError);
    public void visit(AssignExpr AssignExpr);
    public void visit(PostDecrement PostDecrement);
    public void visit(PostIncrement PostIncrement);
    public void visit(FunctionCall FunctionCall);
    public void visit(AssignStatementWithErrRecovery AssignStatementWithErrRecovery);
    public void visit(ErrorIfCondExpr ErrorIfCondExpr);
    public void visit(RegularIfCondExpr RegularIfCondExpr);
    public void visit(NestedStatement NestedStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(SwitchStatement SwitchStatement);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(NoStatement NoStatement);
    public void visit(MethodStatement MethodStatement);
    public void visit(SingleFormParam SingleFormParam);
    public void visit(ErrorFormsPars ErrorFormsPars);
    public void visit(InnerFormParam InnerFormParam);
    public void visit(NoFormParams NoFormParams);
    public void visit(FullFormPars FullFormPars);
    public void visit(ReturnType ReturnType);
    public void visit(VoidReturnType VoidReturnType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(MethodDecls MethodDecls);
    public void visit(NoMethodDeclListWithBraces NoMethodDeclListWithBraces);
    public void visit(FullMethodDeclListWithBraces FullMethodDeclListWithBraces);
    public void visit(ErrorClassVarDecls ErrorClassVarDecls);
    public void visit(RegularClassVarDecls RegularClassVarDecls);
    public void visit(NoClassVarDecls NoClassVarDecls);
    public void visit(FullClassVarDecl FullClassVarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(SingleVarDecl SingleVarDecl);
    public void visit(ErrorGlobalDecl ErrorGlobalDecl);
    public void visit(NextGlobalVarDecl NextGlobalVarDecl);
    public void visit(ErrorGlobalVarDecls ErrorGlobalVarDecls);
    public void visit(FullGlobalVarDecls FullGlobalVarDecls);
    public void visit(SingleConstDecl SingleConstDecl);
    public void visit(ErrorConstDecl ErrorConstDecl);
    public void visit(NextConstDecl NextConstDecl);
    public void visit(ErrorConstDeclsSEMICOLON ErrorConstDeclsSEMICOLON);
    public void visit(FullConstDecl FullConstDecl);
    public void visit(NoDeclList NoDeclList);
    public void visit(ClassDeclList ClassDeclList);
    public void visit(VarDeclLists VarDeclLists);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(Program Program);

}
